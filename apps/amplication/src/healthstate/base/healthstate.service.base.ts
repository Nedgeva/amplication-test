/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  Healthstate, // @ts-ignore
  User,
} from "@prisma/client";

export class HealthstateServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.HealthstateCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.HealthstateCountArgs>
  ): Promise<number> {
    return this.prisma.healthstate.count(args);
  }

  async healthstates<T extends Prisma.HealthstateFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.HealthstateFindManyArgs>
  ): Promise<Healthstate[]> {
    return this.prisma.healthstate.findMany(args);
  }
  async healthstate<T extends Prisma.HealthstateFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.HealthstateFindUniqueArgs>
  ): Promise<Healthstate | null> {
    return this.prisma.healthstate.findUnique(args);
  }
  async createHealthstate<T extends Prisma.HealthstateCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.HealthstateCreateArgs>
  ): Promise<Healthstate> {
    return this.prisma.healthstate.create<T>(args);
  }
  async updateHealthstate<T extends Prisma.HealthstateUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.HealthstateUpdateArgs>
  ): Promise<Healthstate> {
    return this.prisma.healthstate.update<T>(args);
  }
  async deleteHealthstate<T extends Prisma.HealthstateDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.HealthstateDeleteArgs>
  ): Promise<Healthstate> {
    return this.prisma.healthstate.delete(args);
  }

  async getUserId(parentId: string): Promise<User | null> {
    return this.prisma.healthstate
      .findUnique({
        where: { id: parentId },
      })
      .userId();
  }
}
